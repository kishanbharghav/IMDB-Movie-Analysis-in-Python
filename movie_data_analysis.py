# -*- coding: utf-8 -*-
"""movie data analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VeCoh7dRNiurKB8kcmR6NljNQtlLI2DF
"""

import numpy as np
import pandas as pd
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
data = pd.read_csv('IMDB-Movie-Data.csv')
print(data.head(10))
print(data.tail(10))
print('Number of Rows',data.shape[0])
print('Number of Columns',data.shape[1])
print(data.info())
# Check Null Values In The Dataset
data.isnull().sum()
# Check Null Values In The Dataset
percentage_null = (data.isnull().sum() / len(data)) * 100
print(percentage_null)
# plot the position of the missing values
import matplotlib.pyplot as plt
import seaborn as sns
sns.heatmap(data.isnull())
plt.show()
# Drop All The Missing Values
data = data.dropna(axis=0)
# or data.dropna(axis=0 , inplace = True )
import matplotlib.colors as mcolors
cmap = mcolors.ListedColormap(['#ff6666', '#66ff66'])
sns.heatmap(data.isnull(), cmap=cmap, cbar=False)
plt.show()
# Check For Duplicate Data
dup_data=data.duplicated().any()
print("Are there any duplicated values in data?",dup_data)
# Get Overall Statistics About The DataFrame
print(data.describe())
print(data.columns)
# Q1. Display Title of The Movie Having Runtime >= 180 Minutes ?
print(data[data['Runtime (Minutes)']>=180][['Title','Runtime (Minutes)']].set_index('Title'))
# find Which Year There Was The Highest Votin
df_Highest_Votin = data.groupby('Year')['Votes'].sum().sort_values(ascending=False).reset_index()
print(df_Highest_Votin)
# In Which Year There Was The Highest Voting?
sns.barplot(x='Year',y='Votes',data=df_Highest_Votin)
plt.title("Votes By Year")
plt.show()
# Find In Which Year There Was The Highest Revenue?
df_Highest_Revenue = data.groupby('Year')['Revenue (Millions)'].sum().sort_values(ascending=False).reset_index()
print(df_Highest_Revenue)
# In Which Year There Was The Highest Revenue?
sns.barplot(x='Year',y='Revenue (Millions)',data=df_Highest_Revenue)
plt.title("Revenue By Year")
plt.show()
# Find The Average Rating For Each Director
df_director = data.groupby('Director')['Rating'].mean().sort_values(ascending=False).reset_index()
print(df_director)
# what is Top 10 Lengthy Movies Title
le =data.nlargest(10,'Runtime (Minutes)')[['Title','Runtime (Minutes)']].set_index('Title')
print(le)
sns.barplot(x=le['Runtime (Minutes)'],y=le.index)
plt.title('Top 5 Lengtly Movies')
plt.show()
# Display Top 10 Highest Rated Movie Titles And its Directors
top_10=data.nlargest(10,'Rating')[['Title','Rating','Director']].set_index('Title')
print(top_10)
sns.barplot(x=top_10['Rating'],y=top_10.index)
plt.title("Display Top 10 Highest Rated Movie Titles");

